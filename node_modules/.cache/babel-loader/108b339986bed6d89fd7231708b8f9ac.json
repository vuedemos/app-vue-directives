{"remainingRequest":"/Users/damo/Sites/vue-app/vueDemos/app-vue-directives/node_modules/babel-loader/lib/index.js!/Users/damo/Sites/vue-app/vueDemos/app-vue-directives/node_modules/eslint-loader/index.js??ref--13-0!/Users/damo/Sites/vue-app/vueDemos/app-vue-directives/src/main.js","dependencies":[{"path":"/Users/damo/Sites/vue-app/vueDemos/app-vue-directives/src/main.js","mtime":1553266824802},{"path":"/Users/damo/Sites/vue-app/vueDemos/app-vue-directives/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/damo/Sites/vue-app/vueDemos/app-vue-directives/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/damo/Sites/vue-app/vueDemos/app-vue-directives/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es7.promise.finally\";\nimport Vue from 'vue';\nimport App from './App.vue';\nVue.config.productionTip = false;\nVue.directive('my-show', {\n  // 只调用一次，指令第一次绑定到元素时调用\n  bind: function bind(el, binding, vnode) {\n    console.log('bind钩子函数 =>el', el);\n    console.log('bind钩子函数 =>binding', binding);\n    console.log('bind钩子函数 =>vnode', vnode);\n    el.style.display = binding.value ? 'block' : 'none';\n    el.style.color = 'red';\n  },\n  // 被绑定元素插入父节点时调用\n  inserted: function inserted(el, binding, vnode) {\n    console.log('inserted 钩子函数 =>el', el);\n    console.log('inserted 钩子函数 =>binding', binding);\n    console.log('inserted 钩子函数 =>vnode', vnode);\n    el.style.color = 'green';\n  },\n  // 所在组件的 VNode 更新时调用\n  update: function update(el, binding, vnode, oldVnode) {\n    console.log('update 钩子函数 el=>', el);\n    console.log('update 钩子函数 binding=>', binding);\n    console.log('update 钩子函数 vnode=>', vnode);\n    console.log('update 钩子函数 oldVnode=>', oldVnode);\n    el.style.display = binding.value ? 'block' : 'none';\n    el.style.color = 'orange';\n  },\n  // 指令所在组件的 VNode 及其子 VNode 全部更新后调用\n  componentUpdated: function componentUpdated(el, binding, vnode, oldVnode) {\n    console.log('componentUpdated 钩子函数 el=>', el);\n    console.log('componentUpdated 钩子函数 binding=>', binding);\n    console.log('componentUpdated 钩子函数 vnode=>', vnode);\n    console.log('componentUpdated 钩子函数 oldVnode=>', oldVnode);\n    el.style.color = 'lime';\n  },\n  // 指令与元素解绑时调用\n  unbind: function unbind(el, binding, vnode) {\n    console.log('unbind 钩子函数 el=>', el);\n    console.log('unbind 钩子函数 binding=>', binding);\n    console.log('unbind 钩子函数 vnode=>', vnode);\n  }\n});\nnew Vue({\n  render: function render(h) {\n    return h(App);\n  }\n}).$mount('#app');",{"version":3,"sources":["/Users/damo/Sites/vue-app/vueDemos/app-vue-directives/src/main.js"],"names":["Vue","App","config","productionTip","directive","bind","el","binding","vnode","console","log","style","display","value","color","inserted","update","oldVnode","componentUpdated","unbind","render","h","$mount"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AAEAD,GAAG,CAACE,MAAJ,CAAWC,aAAX,GAA2B,KAA3B;AAGAH,GAAG,CAACI,SAAJ,CAAc,SAAd,EAAyB;AACvB;AACAC,EAAAA,IAAI,EAAE,cAAUC,EAAV,EAAcC,OAAd,EAAuBC,KAAvB,EAA8B;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,EAA7B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,OAAlC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,KAAhC;AAEAF,IAAAA,EAAE,CAACK,KAAH,CAASC,OAAT,GAAmBL,OAAO,CAACM,KAAR,GAAgB,OAAhB,GAA0B,MAA7C;AACAP,IAAAA,EAAE,CAACK,KAAH,CAASG,KAAT,GAAiB,KAAjB;AACH,GATsB;AAWvB;AACAC,EAAAA,QAAQ,EAAE,kBAAUT,EAAV,EAAcC,OAAd,EAAuBC,KAAvB,EAA8B;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCJ,EAAlC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCH,OAAvC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,KAArC;AACAF,IAAAA,EAAE,CAACK,KAAH,CAASG,KAAT,GAAiB,OAAjB;AACH,GAjBsB;AAmBvB;AACAE,EAAAA,MAAM,EAAE,gBAAUV,EAAV,EAAcC,OAAd,EAAuBC,KAAvB,EAA8BS,QAA9B,EAAwC;AAC5CR,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCJ,EAAhC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCH,OAArC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCO,QAAtC;AAEAX,IAAAA,EAAE,CAACK,KAAH,CAASC,OAAT,GAAmBL,OAAO,CAACM,KAAR,GAAgB,OAAhB,GAA0B,MAA7C;AACAP,IAAAA,EAAE,CAACK,KAAH,CAASG,KAAT,GAAiB,QAAjB;AACH,GA5BsB;AA8BvB;AACAI,EAAAA,gBAAgB,EAAE,0BAAUZ,EAAV,EAAcC,OAAd,EAAuBC,KAAvB,EAA8BS,QAA9B,EAAwC;AACtDR,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CJ,EAA1C;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CH,OAA/C;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CF,KAA7C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDO,QAAhD;AACAX,IAAAA,EAAE,CAACK,KAAH,CAASG,KAAT,GAAiB,MAAjB;AACH,GArCsB;AAuCvB;AACAK,EAAAA,MAAM,EAAE,gBAAUb,EAAV,EAAcC,OAAd,EAAuBC,KAAvB,EAA8B;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCJ,EAAhC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCH,OAArC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC;AACH;AA5CsB,CAAzB;AA+CA,IAAIR,GAAJ,CAAQ;AACNoB,EAAAA,MAAM,EAAE,gBAAAC,CAAC;AAAA,WAAIA,CAAC,CAACpB,GAAD,CAAL;AAAA;AADH,CAAR,EAEGqB,MAFH,CAEU,MAFV","sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\n\nVue.directive('my-show', {\n  // 只调用一次，指令第一次绑定到元素时调用\n  bind: function (el, binding, vnode) {\n      console.log('bind钩子函数 =>el', el)\n      console.log('bind钩子函数 =>binding', binding)\n      console.log('bind钩子函数 =>vnode', vnode)\n      \n      el.style.display = binding.value ? 'block' : 'none'\n      el.style.color = 'red'\n  },\n\n  // 被绑定元素插入父节点时调用\n  inserted: function (el, binding, vnode) {\n      console.log('inserted 钩子函数 =>el', el)\n      console.log('inserted 钩子函数 =>binding', binding)\n      console.log('inserted 钩子函数 =>vnode', vnode)\n      el.style.color = 'green'\n  },\n\n  // 所在组件的 VNode 更新时调用\n  update: function (el, binding, vnode, oldVnode) {\n      console.log('update 钩子函数 el=>', el)\n      console.log('update 钩子函数 binding=>', binding)\n      console.log('update 钩子函数 vnode=>', vnode)\n      console.log('update 钩子函数 oldVnode=>', oldVnode)\n\n      el.style.display = binding.value ? 'block' : 'none'\n      el.style.color = 'orange'\n  },\n\n  // 指令所在组件的 VNode 及其子 VNode 全部更新后调用\n  componentUpdated: function (el, binding, vnode, oldVnode) {\n      console.log('componentUpdated 钩子函数 el=>', el)\n      console.log('componentUpdated 钩子函数 binding=>', binding)\n      console.log('componentUpdated 钩子函数 vnode=>', vnode)\n      console.log('componentUpdated 钩子函数 oldVnode=>', oldVnode)\n      el.style.color = 'lime'\n  },\n\n  // 指令与元素解绑时调用\n  unbind: function (el, binding, vnode) {\n      console.log('unbind 钩子函数 el=>', el)\n      console.log('unbind 钩子函数 binding=>', binding)\n      console.log('unbind 钩子函数 vnode=>', vnode)\n  }\n})\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n"]}]}